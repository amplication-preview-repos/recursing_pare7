/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserActivity as PrismaUserActivity } from "@prisma/client";

export class UserActivityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserActivityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userActivity.count(args);
  }

  async userActivities<T extends Prisma.UserActivityFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserActivityFindManyArgs>
  ): Promise<PrismaUserActivity[]> {
    return this.prisma.userActivity.findMany<Prisma.UserActivityFindManyArgs>(
      args
    );
  }
  async userActivity<T extends Prisma.UserActivityFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserActivityFindUniqueArgs>
  ): Promise<PrismaUserActivity | null> {
    return this.prisma.userActivity.findUnique(args);
  }
  async createUserActivity<T extends Prisma.UserActivityCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserActivityCreateArgs>
  ): Promise<PrismaUserActivity> {
    return this.prisma.userActivity.create<T>(args);
  }
  async updateUserActivity<T extends Prisma.UserActivityUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserActivityUpdateArgs>
  ): Promise<PrismaUserActivity> {
    return this.prisma.userActivity.update<T>(args);
  }
  async deleteUserActivity<T extends Prisma.UserActivityDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserActivityDeleteArgs>
  ): Promise<PrismaUserActivity> {
    return this.prisma.userActivity.delete(args);
  }
}
